// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_scan_seq_int
Rcpp::List rcpp_scan_seq_int(CharacterVector r_cons, CharacterVector r_the_seq, CharacterVector r_fix_with);
RcppExport SEXP _hypermutR_rcpp_scan_seq_int(SEXP r_consSEXP, SEXP r_the_seqSEXP, SEXP r_fix_withSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type r_cons(r_consSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type r_the_seq(r_the_seqSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type r_fix_with(r_fix_withSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_scan_seq_int(r_cons, r_the_seq, r_fix_with));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hypermutR_rcpp_scan_seq_int", (DL_FUNC) &_hypermutR_rcpp_scan_seq_int, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_hypermutR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
