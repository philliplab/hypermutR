// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_scan_seq
Rcpp::List rcpp_scan_seq(CharacterVector cons, CharacterVector the_seq, CharacterVector the_pattern, LogicalVector fix_with);
RcppExport SEXP _hypermutR_rcpp_scan_seq(SEXP consSEXP, SEXP the_seqSEXP, SEXP the_patternSEXP, SEXP fix_withSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type cons(consSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type the_seq(the_seqSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type the_pattern(the_patternSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type fix_with(fix_withSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_scan_seq(cons, the_seq, the_pattern, fix_with));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hypermutR_rcpp_scan_seq", (DL_FUNC) &_hypermutR_rcpp_scan_seq, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_hypermutR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
